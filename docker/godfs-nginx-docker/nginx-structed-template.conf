#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;


    # managed by crontab
    # all storage servers will be configured here
    #upstream storage_servers {
    #}
    <%download_upstream_servers%>

    # managed by crontab
    # all uploadable storage servers will be configured here
    #upstream uploadable_servers {
    #}
    <%uploadable_upstream_servers%>

    server {
        listen 80;
        client_max_body_size 2048M;
        proxy_request_buffering off;

        #location /download {
        #    proxy_next_upstream http_404 http_500;
        #    proxy_pass http://storage_servers;
        #}
        <%download_locations%>


        location /upload {
            proxy_next_upstream non_idempotent http_404;
            proxy_pass http://upload_servers;
        }


    }
}


# tcp interface
stream {
    # docker stack network DNS server always be this.
    resolver 127.0.0.11;

    #upstream tcp_storage1 {
    #    server storage1:1024;
    #}
    <%all_upstream_servers%>

    # managed by crontab
    # every storage server has a configured group
    #server {
    #    listen 1024;
    #    proxy_pass localhost:1024;
    #}
    <%all_servers%>
}