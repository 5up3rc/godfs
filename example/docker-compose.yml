version: '3.0'
services:
# ----------------------------------------------
  tracker1:
    image: hehety/godfs:1.0.4-beta
    command: tracker
    ports:
      - "1022:1022"
    environment:
      - port=1022
    volumes:
      - tracker1:/godfs/data
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == tracker
    networks:
      - godfs

  tracker2:
    image: hehety/godfs:1.0.4-beta
    command: tracker
    ports:
      - "1023:1023"
    environment:
      - port=1023
    volumes:
      - tracker2:/godfs/data
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == tracker
    networks:
      - godfs

# ----------------------------------------------

  storage1:
    image: hehety/godfs:1.0.4-beta
    command: storage
    ports:
      - "1024:1024"
      - "8001:8001"
    environment:
      - port=1024
      - http_port=8001
      - group=G01
      #- instance_id=01
      - trackers=tracker1:1022
    volumes:
      - storage1:/godfs/data
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.role == storage
    networks:
      - godfs


  storage2:
    image: hehety/godfs:1.0.4-beta
    command: storage
    ports:
      - "1025:1025"
      - "8002:8002"
    environment:
      - port=1025
      - http_port=8002
      - group=G02
      #- instance_id=02
      - trackers=tracker2:1023
    volumes:
      - storage2:/godfs/data
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.role == storage
    networks:
      - godfs


# ----------------------------------------------
  gateway:
    image: nginx
    ports:
      - "8888:80"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.role == tracker
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - godfs

# ----------------------------------------------


networks:
  godfs:
    driver: overlay

volumes:
  tracker1:
  tracker2:
  storage1:
  storage2:


